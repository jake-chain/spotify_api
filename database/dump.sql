-- MySQL Script generated by MySQL Workbench
-- Tue 13 Oct 2020 12:49:49 PM -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema spotifyapi
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spotifyapi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spotifyapi` DEFAULT CHARACTER SET latin1 ;
USE `spotifyapi` ;

-- -----------------------------------------------------
-- Table `spotifyapi`.`playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`playlists` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`playlists` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spotifyapi`.`tracks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`tracks` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`tracks` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spotifyapi`.`playlist_has_tracks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`playlist_has_tracks` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`playlist_has_tracks` (
  `playlist_id` INT(11) NOT NULL,
  `tracks_id` INT(11) NOT NULL,
  PRIMARY KEY (`playlist_id`, `tracks_id`),
  INDEX `fk_playlist_has_tracks_tracks1_idx` (`tracks_id` ASC),
  INDEX `fk_playlist_has_tracks_playlist1_idx` (`playlist_id` ASC),
  CONSTRAINT `fk_playlist_has_tracks_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `spotifyapi`.`playlists` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlist_has_tracks_tracks1`
    FOREIGN KEY (`tracks_id`)
    REFERENCES `spotifyapi`.`tracks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spotifyapi`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`users` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`users` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '\n	',
  `username` VARCHAR(255) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `token` VARCHAR(400) NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `username`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spotifyapi`.`users_has_playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`users_has_playlist` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`users_has_playlist` (
  `users_id` INT(11) NOT NULL,
  `users_username` VARCHAR(255) NOT NULL,
  `playlist_id` INT(11) NOT NULL,
  PRIMARY KEY (`users_id`, `users_username`, `playlist_id`),
  INDEX `fk_users_has_playlist_playlist1_idx` (`playlist_id` ASC),
  INDEX `fk_users_has_playlist_users1_idx` (`users_id` ASC, `users_username` ASC),
  CONSTRAINT `fk_users_has_playlist_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `spotifyapi`.`playlists` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_playlist_users1`
    FOREIGN KEY (`users_id` , `users_username`)
    REFERENCES `spotifyapi`.`users` (`id` , `username`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `spotifyapi`.`users_has_tracks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spotifyapi`.`users_has_tracks` ;

CREATE TABLE IF NOT EXISTS `spotifyapi`.`users_has_tracks` (
  `users_id` INT(11) NOT NULL,
  `users_username` VARCHAR(255) NOT NULL,
  `tracks_id` INT(11) NOT NULL,
  PRIMARY KEY (`users_id`, `users_username`, `tracks_id`),
  INDEX `fk_users_has_tracks_tracks1_idx` (`tracks_id` ASC),
  INDEX `fk_users_has_tracks_users_idx` (`users_id` ASC, `users_username` ASC),
  CONSTRAINT `fk_users_has_tracks_tracks1`
    FOREIGN KEY (`tracks_id`)
    REFERENCES `spotifyapi`.`tracks` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_tracks_users`
    FOREIGN KEY (`users_id` , `users_username`)
    REFERENCES `spotifyapi`.`users` (`id` , `username`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
